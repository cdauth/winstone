<?xml version="1.0" encoding="utf-8"?>
<!-- ===================================================================

   Build file for Winstone - for use with the Jakarta Ant java build tool

Authors:
  Rick Knowles <rick_knowles@hotmail.com>

   $Id$
   
==================================================================== -->

<project name="winstone" default="compile" basedir=".">
  
  <!-- ==================== Initialization properties ===================== -->
  <property name="debug" value="on"/>
  <property name="optimize" value="true"/>
  <property name="release.name" value="latest"/>  
  <property name="release.dir" value="../../releases"/>  
  <property name="backup.dir" value="../../backups"/>  
  <property name="winstone.build" value="../build"/>
  <property name="winstone.apidoc" value="../doc"/>
  <property name="winstone.dist" value="../dist"/>
  <property name="junit.jar" value="c:/java/junit/junit.jar"/>
  <property name="httpunit.jar" value="c:/java/junit/httpunit.jar"/>
  <property name="xml-apis.jar" value="c:/java/junit/xml-apis.jar"/>
  <property name="xerces.jar" value="c:/java/junit/xercesImpl.jar"/>
  <property name="nekohtml.jar" value="c:/java/junit/nekohtml.jar"/>
  <property name="junit.runner" value="junit.textui.TestRunner"/>
  <property name="packages" value="winstone.*,winstone.**,javax.servlet.*,javax.servlet.**"/>

  <target name="timestamp">
    <tstamp/>
  </target>

  <!-- ======================== Copy static files ========================= -->
  <target name="prepare" depends="timestamp">
    <!-- Create destination directories -->
    <mkdir dir="${winstone.build}"/>
    <mkdir dir="${winstone.build}/classes"/>
  </target>

  <!-- ==================== Main build target  ======================= -->

  <target name="compile" depends="prepare">
  <!-- Compile the standard server components -->
    <javac srcdir="src"
           includes="winstone/**,javax/servlet/**"
           excludes="winstone/testCase/**,winstone/testApplication/**"
           destdir="${winstone.build}/classes"
           debug="${debug}" 
           optimize="${optimize}"
           deprecation="off" >
      <classpath>
        <pathelement location="${java.home}/lib/tools.jar"/>
        <pathelement location="${java.home}/lib/dt.jar"/>
        <pathelement location="${java.home}/jre/lib/rt.jar"/>
        <fileset dir="lib" includes="**/*.jar,**/*.zip"/>
     </classpath>
    </javac>

    <copy todir="${winstone.build}/classes">
      <fileset dir="src" includes="**/*.dtd,**/*.properties,**/*.xsd"/>
    </copy>   
  </target>

  <target name="compile-tests" depends="compile">
    <mkdir dir="${winstone.build}/test"/>

    <!-- Compile the junit tests -->
    <javac srcdir="src"
           includes="winstone/testCase/**"
           destdir="${winstone.build}/test"
           debug="${debug}" 
           optimize="${optimize}"
           deprecation="off" >
      <classpath>
        <pathelement location="${java.home}/lib/tools.jar"/>
        <pathelement location="${java.home}/lib/dt.jar"/>
        <pathelement location="${java.home}/jre/lib/rt.jar"/>
        <pathelement location="${httpunit.jar}"/>
        <pathelement location="${junit.jar}"/>
        <pathelement location="${winstone.build}/classes"/>
        <fileset dir="lib" includes="**/*.jar,**/*.zip"/>
     </classpath>
    </javac>
  </target>

  <target name="build-testApplication" depends="compile">
    <mkdir dir="${winstone.build}/testWebApp/WEB-INF/classes"/>

    <copy todir="${winstone.build}/testWebApp">
	  <fileset dir="testWebApp"/>
    </copy>

    <!-- Compile the test application -->
    <javac srcdir="src"
           includes="winstone/testApplication/**"
           destdir="${winstone.build}/testWebApp/WEB-INF/classes"
           debug="${debug}" 
           optimize="${optimize}"
           deprecation="off" >
      <classpath>
        <pathelement location="${java.home}/lib/tools.jar"/>
        <pathelement location="${java.home}/lib/dt.jar"/>
        <pathelement location="${java.home}/jre/lib/rt.jar"/>
        <pathelement location="${winstone.build}/classes"/>
        <fileset dir="lib" includes="**/*.jar,**/*.zip"/>
     </classpath>
    </javac>
  </target>

  <!-- ==================== Administrative targets  ======================= -->
  <target name="clean">
    <delete dir="${winstone.build}"/>
  </target>

  <target name="dist" depends="clean,compile">
    <mkdir dir="${winstone.dist}" />
    <jar jarfile="${winstone.dist}/winstone.jar"
         basedir="${winstone.build}/classes"
         includes="**">
		<manifest>
			<attribute name="Main-Class" value="winstone.Launcher"/>
		</manifest>
    </jar> 
    <jar jarfile="${winstone.dist}/winstone-lite.jar"
    	 basedir="${winstone.build}/classes"
    	 includes="javax/servlet/*,javax/servlet/http/*,javax/servlet/resources/web-app*.dtd,winstone/*">
		<manifest>
			<attribute name="Main-Class" value="winstone.Launcher"/>
		</manifest>
   	</jar>
           
  </target>

  <target name="backup" depends="timestamp">
    <mkdir dir="${backup.dir}"/>
    <tar tarfile="${backup.dir}/winstone_${DSTAMP}${TSTAMP}.tar" basedir=".." includes="development/**"/>
    <gzip src="${backup.dir}/winstone_${DSTAMP}${TSTAMP}.tar" zipfile="${backup.dir}/winstone_${DSTAMP}${TSTAMP}.tar.gz"/>
    <delete file="${backup.dir}/winstone_${DSTAMP}${TSTAMP}.tar"/>
  </target>

  <target name="all" depends="dist,javadoc"/>

  <!-- ==================== Creates the API documentation  ================ -->
  <target name="javadoc">
    <delete dir="${winstone.apidoc}"/>
    <mkdir dir="${winstone.apidoc}"/>
    <javadoc packagenames="${packages}"
             sourcepath="src"
             destdir="${winstone.apidoc}"
             author="true"
             version="true"
             use="true"
             splitindex="true"
             noindex="false"
             windowtitle="winstone project API documentation"
             doctitle="winstone project API documentation">
      <classpath>
        <pathelement location="${java.home}/lib/tools.jar"/>
        <pathelement location="${java.home}/lib/dt.jar"/>
        <pathelement location="${java.home}/jre/lib/rt.jar"/>
        <pathelement location="${httpunit.jar}"/>
        <pathelement location="${junit.jar}"/>
        <fileset dir="lib" includes="**/*.jar,**/*.zip"/>
      </classpath>
    </javadoc>
  </target>

  <!-- =============================== Help =============================== -->
  <target name="targets">
    <echo message=""/>
    <echo message="ANT build targets for winstone"/>
    <echo message=""/>
    <echo message="The following targets are available:"/>
    <echo message="  all                  Clean, then create distribution"/>
    <echo message="  clean                Clean build and dist directories"/>
    <echo message="  main                 Build winstone components"/>
    <echo message="  javadoc              Build API documentation"/>
    <echo message="  backup               Backup the source archive"/>
    <echo message="  dist                 Build the distributable compiled jar"/>
  </target>

  <target name="release" depends="dist">
    <mkdir dir="${release.dir}"/>
    <mkdir dir="${release.dir}/winstone"/>
    <mkdir dir="${release.dir}/winstone/development"/>

    <delete file="${release.dir}/winstone_src_${release.name}.tar.gz"/>
    <delete file="${release.dir}/winstone_${release.name}.jar"/>
    <delete file="${release.dir}/winstone_lite_${release.name}.jar"/>

    <copy toDir="${release.dir}/winstone/development">
      <fileset dir="."/>
    </copy>
    <tar tarfile="${release.dir}/winstone_src_${release.name}.tar" basedir="${release.dir}" includes="winstone/**"/>
    <gzip src="${release.dir}/winstone_src_${release.name}.tar" zipfile="${release.dir}/winstone_src_${release.name}.tar.gz"/>
    <delete file="${release.dir}/winstone_src_${release.name}.tar"/>
    <delete dir="${release.dir}/winstone"/>
    <copy toFile="${release.dir}/winstone_${release.name}.jar" file="${winstone.dist}/winstone.jar"/>
    <copy toFile="${release.dir}/winstone_lite_${release.name}.jar" file="${winstone.dist}/winstone-lite.jar"/>
  </target>

  <target name="release.sourceforge">
    <ftp server="upload.sourceforge.net"
         remotedir="incoming"
         userid="anonymous"
         password=""
         verbose="yes">
      <fileset file="${release.dir}/winstone_${release.name}.jar"/>
      <fileset file="${release.dir}/winstone_lite_${release.name}.jar"/>
      <fileset file="${release.dir}/winstone_src_${release.name}.tar.gz"/>
    </ftp>
  </target>

  <path id="test.classpath">
    <pathelement location="${junit.jar}" />
    <pathelement location="${httpunit.jar}" />
    <pathelement location="${xerces.jar}" />
    <pathelement location="${xml-apis.jar}" />
    <pathelement location="${nekohtml.jar}" />
    <pathelement location="${winstone.build}/test" />
    <pathelement location="${winstone.build}/classes" />
  </path>

  <target name="run-tests" depends="compile-tests,build-testApplication">
    <echo message="Running HttpConnectorTest"/>
    <java classname="${junit.runner}" fork="yes" failonerror="false">
      <arg value="winstone.testCase.HttpConnectorTest"/>
      <classpath refid="test.classpath"/>
    </java>

    <echo message="Running NamingTest"/>
    <java classname="${junit.runner}" fork="yes" failonerror="true">
      <arg value="winstone.testCase.NamingTest"/>
      <classpath refid="test.classpath"/>
    </java>
  </target>

</project>
