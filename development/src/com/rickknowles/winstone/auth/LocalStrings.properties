SecurityConstraint.DefaultName=Security Constraint #[#counter]

BaseAuthenticationHandler.StartAuthCheck=Starting authentication check
BaseAuthenticationHandler.PassedAuthCheck=Passed authentication check
BaseAuthenticationHandler.EvalConstraint=Evaluating security constraint: [#name]
BaseAuthenticationHandler.ApplicableConstraint=Found applicable security constraint: [#name]
BaseAuthenticationHandler.ConstraintNeedsSSL=Security constraint requires SSL (failed): [#name]

BasicAuthenticationHandler.UnauthorizedMessage=This content can only be viewed by authorized users.
BasicAuthenticationHandler.Initialised=BasicAuthenticationHandler initialised for realm: [#name]
BasicAuthenticationHandler.CantSetUser=Request type invalid - can't set authenticated user in request class: [#class]

FormAuthenticationHandler.NoCachedRequest=No cached request - redirecting to the login page.
FormAuthenticationHandler.Initialised=FormAuthenticationHandler initialised for realm: [#name]
FormAuthenticationHandler.CantSetUser=Request type invalid - can't set authenticated user in request class: [#class]

ClientcertAuthenticationHandler.UnauthorizedMessage=This content can only be viewed by authorized users.
ClientcertAuthenticationHandler.Initialised=ClientcertAuthenticationHandler initialised for realm: [#name]
ClientcertAuthenticationHandler.CantSetUser=Request type invalid - can't set authenticated user in request class: [#class]

DigestAuthenticationHandler.UnauthorizedMessage=This content can only be viewed by authorized users.
DigestAuthenticationHandler.Initialised=DigestAuthenticationHandler initialised for realm: [#name]
DigestAuthenticationHandler.CantSetUser=Request type invalid - can't set authenticated user in request class: [#class]
