ServerVersion=Winstone Server v0.6
WebAppConfig.DefaultMimeTypes=jpg=image/jpeg:jpeg=image/jpeg:gif=image/gif:css=text/css:js=text/javascript

# WebAppConfig messages
WebAppConfig.InvalidMount=WebAppConfig: Invalid pattern mount for [#name] pattern [#pattern] - ignoring
WebAppConfig.InvalidPattern=WebAppConfig: Invalid pattern [#pattern] - using: [#newPattern]
WebAppConfig.InvalidMimeMapping=WebAppConfig: Ignoring invalid mime mapping: extension=[#extension] mimeType=[#mimeType]
WebAppConfig.InvalidInitParam=WebAppConfig: Ignoring invalid init parameter: name=[#name] value=[#value]
WebAppConfig.MappedPattern=Mapped: [#name] to [#pattern]
WebAppConfig.URLMatch=URL Match - path: [#path]
WebAppConfig.BadResourcePath=Bad resource path [#path]
WebAppConfig.ErrorOpeningStream=Error opening resource stream
WebAppConfig.InvalidListener=Error instantiating listener class: [#class]
WebAppConfig.AddListener=Adding web application listener: [#class]
WebAppConfig.AuthError=Authentication disabled - couldn't load authentication handler: [#authClassName] or realm: [#realmClassName]
WebAppConfig.AuthDisabled=Authentication disabled - can't load authentication handler for [#type] authentication
WebAppConfig.JNDIDisabled=JNDI disabled - can't find JNDI Manager class
WebAppConfig.JNDIError=JNDI disabled - couldn't JNDI Manager: [#jndiClassName]
WebAppConfig.ExceptionNotFound=Exception [#name] not found in classpath
WebAppConfig.NullRD=ERROR: Null request handler for initial dispatch - eh ?
WebAppConfig.CheckWelcomeFile=Beginning welcome file match for path: [#path]
WebAppConfig.FoundNonSlashDirectory=Detected directory with no trailing slash (path=[#path]) - redirecting

WinstoneRequest.CookieFound=Cookie name: [#cookieName] value: [#cookieValue]
WinstoneRequest.SessionCookieFound=Found session cookie: [#cookieValue]
WinstoneRequest.ParsingParameters=Parsing parameters: 
WinstoneRequest.IgnoringBadParameter=Ignoring bad parameter: 
WinstoneRequest.ErrorParameters=Error parsing request parameters
WinstoneRequest.UnknownParameterType=Unknown param type: [#name]
WinstoneRequest.BothMethodsCalled=WARNING: Called getParameter() after getInputStream()
WinstoneRequest.ParsingBodyParameters=Parsing request body for parameters 
WinstoneRequest.ErrorBodyParameters=Error parsing body of the request
WinstoneRequest.ParamLine=Param line: 
WinstoneRequest.IncorrectContentLength=Content-length said [#contentLength], actual length was [#readCount]
WinstoneRequest.BothMethods=Called getInputStream after getParameter ... error
WinstoneRequest.UnknownParamType=Unknown parameter type: 
WinstoneRequest.BadDate=Can't convert to date - 
WinstoneRequest.InvalidateSession=Invalidating Session [#id] after inactive for [#inactivePeriod]ms

WinstoneSession.AttributeNotSerializable=Web application is marked distributable, but session object [#name] (class [#class]) does not extend java.io.Serializable - this variable will be ignored if the session is tranferred
WinstoneSession.SkippingNotSerializable=Web application is marked distributable, but session object [#name] (class [#class]) does not extend java.io.Serializable - this variable is being ignored by session transfer

WinstoneOutputStream.CommittedBytes=Written [#postHeaderBytes] bytes to response body
WinstoneOutputStream.AlreadyCommitted=OutputStream already committed
WinstoneOutputStream.ResetBuffer=Resetting buffer - discarding [#discardBytes] bytes

WinstoneResponse.ShortOutput=WARNING: Content-length header=[#contentLength] bytes, but only [#bodyBytes] bytes written to output by the end of this commit
WinstoneResponse.WriterError=Error getting printWriter for encoding 
WinstoneResponse.ErrorPage=<html><head><title>Error [#statusCode]</title></head><body bgcolor="#ffffff"><h1>Error code [#statusCode]</h1>[#msg]<br><br><hr size="1" width"90%"><i>Generated by [#serverVersion] at [#date]</i></body></html>
WinstoneResponse.ServletExceptionPage=<h3>Untrapped error in servlet</h3><br><pre>[#stackTrace]</pre>
WinstoneResponse.ErrorInErrorPage=Error using error page [#path] for code [#code]
WinstoneResponse.SendingError=Sending error message to browser: code [#code], message: [#msg]
WinstoneResponse.EncodingMap=en_US=8859_1;en=8859_1;ja=SJIS
WinstoneResponse.TestingException=Testing error page exception [#exception]
WinstoneResponse.ResponseCommitted=Response cannot be reset - it is already committed

RequestHandlerThread.OpenedPort=New socket opened - remotePort 
RequestHandlerThread.ClosedPort=Closed socket - remotePort 
RequestHandlerThread.StartRequest=Starting request id: [#requestId] - [#name]
RequestHandlerThread.FinishRequest=Finishing request id:  [#requestId] - [#name]
RequestHandlerThread.RequestTime=Processed complete request: headerParseTime=[#headerTime]ms totalTime=[#totalTime]ms path=[#path]
RequestHandlerThread.SocketTimeout=Socket read timed out - exiting request handler thread
RequestHandlerThread.RequestError=Error within request handler thread
RequestHandlerThread.HandlingRD=Processing with RD: 
RequestHandlerThread.UntrappedError=Untrapped Error in Servlet
RequestHandlerThread.NotInPrefix=Request URL [#url] not in prefix [#prefix]
RequestHandlerThread.NotInPrefixPage=Request URL [#url] not found.<br><br>
RequestHandlerThread.ThreadName=RH#[#threadNo]
RequestHandlerThread.EnterWaitState=Thread entering wait state: [#threadName]
RequestHandlerThread.WakingUp=Thread leaving wait state: [#threadName]
RequestHandlerThread.ThreadExit=Exiting thread: [#threadName]

RequestDispatcher.ForwardCommitted=Called RequestDispatcher.forward() on committed response
RequestDispatcher.InvalidMapping=Filter mapping invalid ([#filterPattern]) - ignoring
RequestDispatcher.ExecutingFilter=Executing Filter: [#filterName]
RequestDispatcher.BypassingFilter=Skipping Filter: Mapping=[#filterPattern], Path=[#path], ServletName=[#name]
RequestDispatcher.IncludeError=UnavailableException in servlet include
RequestDispatcher.ForwardError=UnavailableException in servlet forward
RequestDispatcher.FilterError=Error in filter - marking unavailable

ServletConfiguration.DeployedInstance=Loaded servlet instance [#name] class: [#class]
ServletConfiguration.init=init
ServletConfiguration.destroy=destroy
ServletConfiguration.ClassLoadError=Failed to load class: 
ServletConfiguration.InitError=Failed to initialise servlet: 

FilterConfiguration.DeployedInstance=Loaded filter instance [#name] class: [#class]
FilterConfiguration.init=init
FilterConfiguration.destroy=destroy
FilterConfiguration.ClassLoadError=Failed to load class: 
FilterConfiguration.InitError=Failed to initialise filter: 
FilterConfiguration.Description=FilterConfiguration[name=[#name], filterClass=[#class]]

WinstoneClassLoader.WebAppClasses=Adding webapp classes folder to classpath
WinstoneClassLoader.NoWebAppClasses=No webapp classes folder found
WinstoneClassLoader.WebAppLib=Adding webapp lib [#name] to classpath
WinstoneClassLoader.NoWebAppLib=No webapp lib folder found
WinstoneClassLoader.BadURL=Bad URL in WinstoneClassLoader
WinstoneClassLoader.IOException=IOException in WinstoneClassLoader
WinstoneClassLoader.ErrorBuildingClassPath=Error building classpath string

WinstoneInputStream.EndOfStream=End of stream

InvokerServlet.NotInPrefix=The URL requested was not in the servlet context prefix: [#fullURI]
InvokerServlet.NoMatchingServletFound=There was no invokable servlet found matching the URL: [#requestURI]
InvokerServlet.MountingServlet=[#invokerName]: Mounting servlet class [#className]

StaticResourceServlet.PathRequested=[#name]: path=[#path]
StaticResourceServlet.PathNotFound=File [#path] not found
StaticResourceServlet.PathInvalid=Illegal path error - [#path]
StaticResourceServlet.AccessDenied=Access to this resource is denied
StaticResourceServlet.TestingWelcomeFile=Testing welcome file: [#welcomeFile]

StaticResourceServlet.DirectoryList.HeaderColour=#ffffff
StaticResourceServlet.DirectoryList.HeaderTextColour=#000033

StaticResourceServlet.DirectoryList.LabelColour=#aeaeae
StaticResourceServlet.DirectoryList.LabelTextColour=#ffffff

StaticResourceServlet.DirectoryList.OddColour=#dddddd
StaticResourceServlet.DirectoryList.EvenColour=#cbcbcb
StaticResourceServlet.DirectoryList.RowTextColour=#000033

StaticResourceServlet.DirectoryList.ParentDirectoryLabel=(parent directory)
StaticResourceServlet.DirectoryList.DirectoryLabel=directory
StaticResourceServlet.DirectoryList.NoDateLabel=-

StaticResourceServlet.DirectoryList.Row=\
<tr bgcolor="[#rowColour]" color="[#rowTextColour]">\
  <td align="left"><a href="[#fileHref]">[#fileLabel]</a></td>\
  <td align="right">[#fileLength]</td>\
  <td align="right">[#fileDate]</td></tr>

StaticResourceServlet.DirectoryList.Body=\
<html><head><title>Winstone directory listing - [#path]</title></head>\
<body bgcolor="#ffffff">\
  <table border="0" width="#90%">\
    <tr>\
      <td bgcolor="[#headerColour]">\
        <h1><font color="[#headerTextColour]">Directory - [#path]</font></h1>\
      </td>\
    </tr>\
  </table>\
  <hr width=\"90%\" size="1" noshade="true">\
  <center>\
    <table border="0" width="90%">\
      <tr bgcolor="[#labelColour]"">\
        <td align="center"><font color="[#labelTextColour]"><b>Name</b></font></td>\
        <td align="center" width="100"><font color="[#labelTextColour]"><b>Size</b></font></td>\
        <td align="center" width="150"><font color="[#labelTextColour]"><b>Date</b></font></td>\
      </tr>\
      [#rows]\
    </table>\
  </center>\
  <hr width="90%" size="1" noshade="true">\
  <i>Directory list generated by [#serverVersion] at [#date]</i>\
</body></html>

HttpListener.ErrorUriLine=Error URI Line:
HttpListener.ShutdownError=Error during HTTP listener init or shutdown
HttpListener.ShutdownOK=HTTP Listener shutdown successfully
HttpListener.StartupOK=HTTP Listener started: port=[#port]

ObjectPool.UsingRequestFromPool=ReqPool: Using pooled request - available: [#unused]
ObjectPool.NewRequestForPool=ReqPool: Spawning new request - available: [#used]
ObjectPool.PoolRequestLimit=ReqPool: Spawning new request - available: [#unused]
ObjectPool.RequestReleased=ReqPool: Request released - available: [#unused]
ObjectPool.UsingResponseFromPool=ReqPool: Using pooled response - available: [#unused]
ObjectPool.NewResponseForPool=ReqPool: Spawning new response - available: [#used]
ObjectPool.PoolResponseLimit=ReqPool: Spawning new response - available: [#unused]
ObjectPool.ResponseReleased=ReqPool: Response released - available: [#unused]
ObjectPool.UsingRHPoolThread=RHPool: Using pooled handler thread - used: [#used] unused: [#unused]
ObjectPool.NewRHPoolThread=RHPool: Spawning new handler thread - used: [#used] unused: [#unused]
ObjectPool.NoRHPoolThreads=ERROR: Request ignored because there were no more request handlers available in the pool
ObjectPool.UnknownRHPoolThread=RHPool: Releasing unknown handler. Ignoring
ObjectPool.ReleasingRHPoolThread=RHPool: Releasing handler thread - used: [#used] unused: [#unused]

Launcher.ClusterOffNoControlPort=Clustering disabled - control port must be enabled
Launcher.ClusterOffNotDistributable=Clustering disabled - the web application must be distributable
Launcher.ClusterNotFound=Clustering disabled - cluster implementation class not found
Launcher.NoWebRoot=Web root not found - 
Launcher.ShutdownError=Error during listener init or shutdown
Launcher.ShutdownOK=Winstone shutdown successfully
Launcher.StartupOK=[#serverName] running: controlPort=[#controlPort] prefix=[#prefix] webroot=[#webroot]
Launcher.ControlDisabled=disabled
Launcher.WebXMLParseError=Error parsing XML files
Launcher.WarFileInvalid=The warfile supplied is unavailable or invalid ([#warfile])
Launcher.WebRootNotDirectory=The webroot supplied is not a valid directory ([#dir])
Launcher.WebRootExists=The webroot supplied already exists - overwriting where newer ([#dir])
Launcher.BeginningWarExtraction=Beginning extraction from war file
Launcher.DefaultPropertyFile=winstone.properties
Launcher.NoPropertyFile=Property file not found ([#filename]) - ignoring
Launcher.UsingPropertyFile=Property file found ([#filename]) - loading
Launcher.AJPNotFound=AJP13 listener class not found - ignoring
Launcher.HTTPNotFound=HTTP listener class not found - ignoring

Launcher.UsageInstructions=[#version], (c) 2003, 2004 Rick Knowles\n\
Usage: java com.rickknowles.winstone.Listener [--option=value] [--option=value] [etc]\n\n\
Required options: either --webroot OR --warfile\n\
   --webroot                = set document root folder.\n\
   --warfile                = set location of warfile to extract from.\n\n\
Other options:\n\
   --config                 = load configuration properties from specified file name (if supplied). Default is ./winstone.properties\n\
   --prefix                 = add this prefix to all URLs (eg http://localhost:8080/prefix/resource). Default is none\n\
   --logfile                = redirect winstone log messages to this file\n\
   --debug                  = set the level of debug msgs (1-9). Default is 5 (INFO level)\n\n\
   --httpPort               = set the http listening port. -1 to disable, Default is 8080\n\
   --httpListenAddress      = set the http listening address. Default is all interfaces\n\
   --httpDoHostnameLookups  = enable host name lookups on incoming http connections (true/false). Default is true\n\
   --ajp13Port              = set the ajp13 listening port. -1 to disable, Default is 8009\n\
   --ajp13ListenAddress     = set the ajp13 listening address. Default is all interfaces\n\
   --controlPort            = set the shutdown/control port. -1 to disable, Default disabled\n\n\
   --handlerCountStartup    = set the no of worker threads to spawn at startup. Default is 5\n\
   --handlerCountMax        = set the max no of worker threads to allow. Default is 300\n\
   --handlerCountMaxIdle    = set the max no of idle worker threads to allow. Default is 50\n\n\
   --directoryListings      = enable directory lists (true/false). Default is true\n\
   --useJasper              = enable jasper JSP handling (true/false). Default is false\n\
   --useWinstoneClassLoader = enable WebApp classLoader (true/false). Default is true\n\
   --useServletReloading    = enable servlet reloading (true/false). Default is false\n\
   --useInvoker             = enable the servlet invoker (true/false). Default is false\n\
   --invokerPrefix          = set the invoker prefix. Default is /servlet/\n\
   --usage / --help         = show this message\n\n\
Cluster options:\n\
   --useCluster             = enable cluster support (true/false). Default is false\n\
   --clusterNodes           = a comma separated list of node addresses (IP:ControlPort,IP:ControlPort,etc)\n\n\
JNDI options:\n\
   --useJNDI                      = enable JNDI support (true/false). Default is false\n\
   --jndi.resource.<name>         = set the class to be used for the resource marked <name>\n\
   --jndi.param.<name>.<attName>  = set an attribute <attName> to be associated with the resource marked <name>\n\n\
Security options:\n\
   --realmClass                   = Set the realm class to use for user authentication. Defaults to ArgumentsRealm class\n\n\
   --argumentsRealm.passwd.<user> = Password for user <user>. Only valid for the ArgumentsRealm realm class\n\
   --argumentsRealm.roles.<user>  = Roles for user <user> (comma separated). Only valid for the ArgumentsRealm realm class\n\n\
   --fileRealm.configFile         = File containing users/passwds/roles. Only valid for the FileRealm realm class\n\n\
This program is free software; you can redistribute it and/or\n\
modify it under the terms of the GNU General Public License\n\
Version 2 as published by the Free Software Foundation.\n\n\
This program is distributed in the hope that it will be useful,\n\
but WITHOUT ANY WARRANTY; without even the implied warranty of\n\
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\
GNU General Public License Version 2 for more details.\n\n\
You should have received a copy of the GNU General Public License\n\
Version 2 along with this program; if not, write to the Free Software\n\
Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n
